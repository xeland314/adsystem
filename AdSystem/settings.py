"""
Django settings for AdSystem project.

Generated by 'django-admin startproject' using Django 5.2.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get(
    "SECRET_KEY",
    default="django-insecure-=+@o9$o5(u7bi(p$m=y#z&q(m&v06gu+o-gl)=0k91)4utl)#x",
)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = "PRODUCTION" not in os.environ

ALLOWED_HOSTS = []

EXTERNAL_ALLOWED_HOSTS: str = os.getenv("ALLOWED_HOSTS")
if EXTERNAL_ALLOWED_HOSTS:
    ALLOWED_HOSTS.extend(EXTERNAL_ALLOWED_HOSTS.split(","))

CORS_ORIGIN_WHITELIST = []

EXTERNAL_CORS_ORIGIN: str = os.getenv("CORS_ORIGIN_WHITELIST")
if EXTERNAL_CORS_ORIGIN:
    CORS_ORIGIN_WHITELIST.extend(EXTERNAL_CORS_ORIGIN.split(","))

CSRF_TRUSTED_ORIGINS = []

EXTERNAL_CSRF_TRUSTED_ORIGINS: str = os.getenv("CSRF_TRUSTED_ORIGINS")
if EXTERNAL_CSRF_TRUSTED_ORIGINS:
    CSRF_TRUSTED_ORIGINS.extend(EXTERNAL_CSRF_TRUSTED_ORIGINS.split(","))

# Media config:
MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media")

APPEND_SLASH = True

X_FRAME_OPTIONS = "ALLOWFROM"

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "whitenoise.runserver_nostatic",
    "corsheaders",
    "ads",
    "axes",
    "rest_framework",
    "drf_yasg",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "axes.middleware.AxesMiddleware",  # Añadido para django-axes
]

ROOT_URLCONF = "AdSystem.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "ads/templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "AdSystem.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/
# This setting tells Django at which URL static files are going to be served to the user.
# Here, they well be accessible at your-domain.onrender.com/static/...
STATIC_URL = "/static/"
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")
# Following settings only make sense on production and may break development environments.
if not DEBUG:  # Tell Django to copy statics to the `staticfiles` directory
    # in your application directory on Render.
    # Turn on WhiteNoise storage backend that takes care of compressing static files
    # and creating unique names for each version so they can safely be cached forever.
    STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# -------------------------------------------------------------
# Configuración para django-axes
# -------------------------------------------------------------

AUTHENTICATION_BACKENDS = [
    # AxesBackend should be the first backend in the AUTHENTICATION_BACKENDS list.
    "axes.backends.AxesBackend",
    # Django ModelBackend is the default authentication backend.
    "django.contrib.auth.backends.ModelBackend",
]

# Número de intentos de inicio de sesión fallidos antes de bloquear
AXES_FAILURE_LIMIT = 5

# Período de tiempo para el bloqueo (en horas)
AXES_COOLOFF_TIME = 1

# Bloquear por IP y nombre de usuario
AXES_LOCKOUT_PARAMETERS = [["username", "ip_address"]]

# Usar el cache de Django para almacenar los intentos fallidos
AXES_CACHE = "default"

# -------------------------------------------------------------
# Configuración para autenticación
# -------------------------------------------------------------

# La URL a la que se redirigirá a los usuarios no autenticados
# Puedes ajustarla si decides que tu página de login esté en otra ruta.
LOGIN_URL = (
    "ads:login"  # Usamos el espacio de nombres 'ads' y el nombre de la URL 'login'
)

# URL a la que se redirigirá a los usuarios después de iniciar sesión con éxito.
# Puedes cambiarla si quieres que vayan a una página diferente.
LOGIN_REDIRECT_URL = "ads:ad_statistics"

# URL a la que se redirigirá a los usuarios después de cerrar sesión.
# Generalmente, se redirige de nuevo a la página de inicio de sesión o a la página principal.
LOGOUT_REDIRECT_URL = "ads:login"
